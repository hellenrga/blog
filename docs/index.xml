<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Docs on Hellen Assis</title>
    <link>https://hellendev.com.br/docs/</link>
    <description>Recent content in Docs on Hellen Assis</description>
    <generator>Hugo -- 0.140.2</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 06 Jan 2025 20:02:23 -0300</lastBuildDate>
    <atom:link href="https://hellendev.com.br/docs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Git-repair for broken Git Repositories</title>
      <link>https://hellendev.com.br/docs/broken-git-repository/</link>
      <pubDate>Mon, 06 Jan 2025 20:02:23 -0300</pubDate>
      <guid>https://hellendev.com.br/docs/broken-git-repository/</guid>
      <description>&lt;h1 id=&#34;my-repository-suddenly-broke-heres-how-i-fixed-it&#34;&gt;My Repository Suddenly Broke! Here&amp;rsquo;s How I Fixed It&lt;/h1&gt;
&lt;p&gt;Yesterday, I was mildly working on one of my GitHub repositories, making solid progress, when disaster struck. Just as I was about to &lt;code&gt;git push&lt;/code&gt; my hard-working changes, my repositoryâ€¦ broke. Completely.&lt;/p&gt;
&lt;p&gt;At first, I thought, &lt;em&gt;&amp;ldquo;Oh no, what did I mess up this time?&amp;rdquo;&lt;/em&gt; Cue the classic facepalm of frustration.&lt;/p&gt;
&lt;p&gt;After all the crying and groaning (just kidding&amp;hellip;. it was only crying ðŸ˜†) I turned to AI for a solution.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Azure FinOps Hub</title>
      <link>https://hellendev.com.br/docs/azure-finops-hub/</link>
      <pubDate>Mon, 06 Jan 2025 19:48:42 -0300</pubDate>
      <guid>https://hellendev.com.br/docs/azure-finops-hub/</guid>
      <description>&lt;h1 id=&#34;what-is-azure-finops-hub&#34;&gt;What is Azure FinOps Hub?&lt;/h1&gt;
&lt;p&gt;The Azure FinOps Hub is a community-driven template designed to consolidate Azure financial management tools as Cost Management + Billing, Azure Advisor, Azure Policy etc. into a &lt;strong&gt;single interface&lt;/strong&gt;. Simple as that.&lt;/p&gt;
&lt;p&gt;(Why is it so hard to find straightforward concepts on internet these days?)&lt;/p&gt;
&lt;p&gt;Even though the template is community-made, it&amp;rsquo;s recognized by Microsoft Azure itself, and has a Azure Learn page dedicated for it. Read it &lt;a href=&#34;https://learn.microsoft.com/en-us/cloud-computing/finops/toolkit/hubs/finops-hubs-overview&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker, Linux Server, Shell Scripting.</title>
      <link>https://hellendev.com.br/docs/starting-on-docker/</link>
      <pubDate>Fri, 03 Jan 2025 17:10:38 -0300</pubDate>
      <guid>https://hellendev.com.br/docs/starting-on-docker/</guid>
      <description>&lt;h1 id=&#34;diving-into-devops&#34;&gt;Diving into DevOps&lt;/h1&gt;
&lt;p&gt;I already have a solid foundation in DevOps tools through my professional experience and studies, I believe thereâ€™s always room to deepen my understanding. To strengthen my knowledge further, I decided to revisit the basics and embark on a Starter DevOps course offered by Alura, one of Brazilâ€™s premier tech education platforms.&lt;/p&gt;
&lt;p&gt;This course spanned 32 hours and was divided into three modules: &lt;strong&gt;Linux CLI, Secure Traffic, and Docker.&lt;/strong&gt; Each module built upon the fundamentals and provided hands-on experience, ensuring a well-rounded grasp of essential DevOps concepts.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building this blog with Hugo, Github Actions and a Custom Domain.</title>
      <link>https://hellendev.com.br/docs/website/</link>
      <pubDate>Thu, 02 Jan 2025 15:11:12 -0300</pubDate>
      <guid>https://hellendev.com.br/docs/website/</guid>
      <description>&lt;p&gt;This post provides a step-by-step guide on how you can create this blog powered by Hugo, configure Github Actions to publish to Github Pages, and link custom domain to your Github Pages.&lt;/p&gt;
&lt;h3 id=&#34;set-up-hugo&#34;&gt;Set up Hugo&lt;/h3&gt;
&lt;h4 id=&#34;install-hugo-and-create-a-new-site&#34;&gt;Install Hugo and Create a New Site&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install hugo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo new site theplaybook -f yml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Install Hugo with Homebrew&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;hugo new site &amp;lt;site_name&amp;gt;&lt;/code&gt;. This will create a directory &lt;code&gt;&amp;lt;site_name&amp;gt;&lt;/code&gt; containing the hugo templates. Pass in the optional &lt;code&gt;-f yml&lt;/code&gt; option to override the default toml files used for configuration. Refer to the &lt;a href=&#34;https://gohugo.io/getting-started/quick-start/&#34;&gt;hugo doc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;baseurl&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Leave the baseurl in config.yml empty for now&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;create-a-new-page&#34;&gt;Create a new page&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo new docs/test.md
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Create a new page with &lt;code&gt;hugo new &amp;lt;filename&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Open the test.md file and set &lt;code&gt;draft: false&lt;/code&gt;; otherwise the page will not render&lt;/li&gt;
&lt;li&gt;Add random content in the test.md file&lt;/li&gt;
&lt;li&gt;You can run &lt;code&gt;hugo server&lt;/code&gt; to run the application locally on &lt;code&gt;localhost:1313&lt;/code&gt; but it might throw a layout error at the moment without any theme&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;install-theme&#34;&gt;Install theme&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git init
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/adityatelange/hugo-PaperMod themes/PaperMod --depth&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git submodule add --depth&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Run &lt;code&gt;git init&lt;/code&gt; on the root of the project to initialize a Git repository&lt;/li&gt;
&lt;li&gt;We will install the PaperMod theme. Use the two commands above from the instructions &lt;a href=&#34;https://github.com/adityatelange/hugo-PaperMod/wiki/Installation&#34;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Or choose a theme from the &lt;a href=&#34;https://themes.gohugo.io/&#34;&gt;hugo themes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;theme&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;PaperMod&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Add &lt;code&gt;theme: PaperMod&lt;/code&gt; to your config.yml&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;configure-github-actions-to-publish-to-the-github-pages&#34;&gt;Configure Github Actions to Publish to the Github Pages&lt;/h3&gt;
&lt;h4 id=&#34;create-a-git-repository-and-initialize-git&#34;&gt;Create a Git repository and initialize Git&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;# README&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; README.md
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git add README.md
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;first commit&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git branch -M main
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git remote add origin &amp;lt;path_to_your_git_repo&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push -u origin main
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Create a repository on Github, create a readme file, add the remote address, and push your first commit&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;manually-add-the-gh-pages-branch&#34;&gt;Manually Add the gh-pages Branch&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Manually add the gh-pages branch to the repository; otherwise the github actions will throw an error&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;allow-read-and-write-permissions-on-the-workflow&#34;&gt;Allow Read and Write Permissions on the Workflow&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Allow read and write permissions under Settings &amp;gt; Actions &amp;gt; General &amp;gt; Workflow permissions&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;add-a-githubworkflowsdeployyml-file-under-the-project-root-directory&#34;&gt;Add a .github/workflows/deploy.yml file under the project root directory&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Publish to GH Pages&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;on&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;push&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;branches&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;pull_request&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;jobs&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;deploy&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;runs-on&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ubuntu-latest&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Checkout source&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/checkout@v3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;submodules&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Checkout destination&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/checkout@v3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;if&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;github.ref == &amp;#39;refs/heads/main&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;ref&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;gh-pages&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;path&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;built-site&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Setup Hugo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: |&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          curl -L -o /tmp/hugo.tar.gz &amp;#39;https://github.com/gohugoio/hugo/releases/download/v0.140.2/hugo_extended_0.140.2_linux-amd64.tar.gz&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          tar -C ${RUNNER_TEMP} -zxvf /tmp/hugo.tar.gz hugo&lt;/span&gt;          
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Build&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${RUNNER_TEMP}/hugo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Deploy&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;if&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;github.ref == &amp;#39;refs/heads/main&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: |&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          cp -R public/* ${GITHUB_WORKSPACE}/built-site/
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          cd ${GITHUB_WORKSPACE}/built-site
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          git add .
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          git config user.name &amp;#39;[Your GitHub username]&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          git config user.email &amp;#39;[Your e-mail]&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          git commit -m &amp;#39;[Commit message]&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          git push&lt;/span&gt;          
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;The first step checks out my repository under &lt;code&gt;$GITHUB_WORKSPACE&lt;/code&gt; and &lt;code&gt;submodules:true&lt;/code&gt; ensures that our submodule for the theme repository is fetched as well&lt;/li&gt;
&lt;li&gt;The second step allows us to reference the &lt;code&gt;gh-pages&lt;/code&gt; branch via the &lt;code&gt;$GITHUB_WORKSPACE/built-site&lt;/code&gt; directory, where our static sites will be stored in (Refer to the &lt;code&gt;Deploy&lt;/code&gt; step)&lt;/li&gt;
&lt;li&gt;The third and fourth steps involve installing hugo and building the static pages in the &lt;code&gt;public&lt;/code&gt; directory with the &lt;code&gt;hugo&lt;/code&gt; command&lt;/li&gt;
&lt;li&gt;The last step copies the static sites into &lt;code&gt;${GITHUB_WORKSPACE}/built-site&lt;/code&gt; and pushes the changes to the referenced branch &lt;code&gt;gh-pages&lt;/code&gt;, which is a special branch that Github recognizes and uses to publish to your Github Pages site&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note: the content will be deployed to &lt;code&gt;https://&amp;lt;username&amp;gt;.github.io/&amp;lt;repository_name&amp;gt;/&lt;/code&gt; by default if not configured otherwise. Update the &lt;code&gt;base_url&lt;/code&gt; in config.yml to &lt;code&gt;&amp;quot;https://&amp;lt;username&amp;gt;.github.io/&amp;lt;repository_name&amp;gt;/&amp;quot;&lt;/code&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
